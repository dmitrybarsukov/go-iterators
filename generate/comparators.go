package main

import (
	"fmt"
	"os"

	"iterator/generate/commons"
)

var comparatorsHeader = `// Code generated by generate/extensions.go DO NOT EDIT.
package comparator
`

var comparatorTemplate = `
func compare%[1]s(i, j any) bool {
	return i.(%[2]s) < j.(%[2]s)
}
`

func main() {
	resultFileName := "util/comparator/comparators.generated.go"
	file, err := os.Create(resultFileName)
	if err != nil {
		fmt.Printf("Error creating file %s: %v", resultFileName, err)
		return
	}
	defer func() { _ = file.Close() }()
	_, err = file.WriteString(comparatorsHeader)
	if err != nil {
		fmt.Printf("Error writing: %v", err)
		return
	}
	for _, typeName := range commons.OrderedTypes {
		typeNameCap := commons.Capitalize(typeName)
		_, err = fmt.Fprintf(file, comparatorTemplate, typeNameCap, typeName)
	}
	fmt.Println("Comparators OK")
}
